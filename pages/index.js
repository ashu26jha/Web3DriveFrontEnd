import Head from 'next/head'
import { Inter } from 'next/font/google'
import { useEffect, useState } from 'react'
import {Metamask,getcurrentconnectedAccounts,addWalletListener,connectWallet} from '../components/Metamask';
const inter = Inter({ subsets: ['latin'] })

export default function Home() {
  const [walletAddress , setwalletAddress] = useState("");
  useEffect (()=>{
    getcurrentconnectedAccounts();
    addWalletListener();
  })
  const connectWallet = async () => {
    if (typeof window !== 'undefined' && typeof window.ethereum !== 'undefined') {
      try {
        const accounts = await window.ethereum.request({ method: "eth_requestAccounts" });
        setwalletAddress(accounts[0]);
      }
      catch (e) {
        console.log(e);
      }
    }
    else {
      console.log("Please install metamask")
    }
  }

  const addWalletListener = async () => {
    if (typeof window !== 'undefined' && typeof window.ethereum !== 'undefined') {
      window.ethereum.on("accountsChanged", (accounts) => {
        setwalletAddress(accounts[0])
        console.log(accounts[0])
      })
    }
    else {
      setwalletAddress("");
    }
  }

  const getcurrentconnectedAccounts = async () => {
    if (typeof window !== 'undefined' && typeof window.ethereum !== 'undefined') {
      try {
        const accounts = await window.ethereum.request({ method: "eth_accounts" });
        if(accounts[0].length>0){
          setwalletAddress(accounts[0]);
          console.log(accounts[0])
        }
      }
      catch (e) {
        console.log(e);
      }
    }
    else {
      console.log("Please install metamask")
    }
  }
  return (
    <>

      <Head>
        
        <title>Web3 Drive</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Metamask/>
      <button onClick={connectWallet}>{walletAddress.length>0 ? `Connected to ${walletAddress.substring(0,4)}...${walletAddress.substring(38,42)}` : "Connect"}</button>
    </>
  )
}
