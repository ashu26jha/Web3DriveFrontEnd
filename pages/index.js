import Head from 'next/head';
import Navbar from "../components/Navbar";
import Cards from "../components/Cards";
import { useMoralis, useWeb3Contract } from "react-moralis";
import AddFile from "../components/AddFile";
import Footer from "../components/Footer";
import contractAddresses from '../constants/networkMapping.json';
import abi from "../constants/web3drive.json";
import GET_ACTIVE_ITEM from "../constants/subGraphQuery"
import { useQuery } from '@apollo/client';
import { share } from '../components/Share';
import axios from 'axios'



export default function Home() {

  const { chainId: chainIdHex } = useMoralis()
  const chainId = parseInt(chainIdHex);
  const web3driveAddress = chainId in contractAddresses ? contractAddresses[chainId][0] : null

  const { loading, error, data: dataRecieved } = useQuery(GET_ACTIVE_ITEM);

  const { runContractFunction: changeAccessLevel } = useWeb3Contract({
    abi: abi,
    contractAddress: web3driveAddress,
    functionName: "changeAccessLevel",
    params: { 
      account:'0x62273214392D066823750fDaf449C57f608Fc26B',
      tokenId:0,
      level:3
    },
  });

  const { runContractFunction: deleteFile } = useWeb3Contract({
    abi: abi,
    contractAddress: web3driveAddress,
    functionName: "deleteFile",
    params: { 
      tokenId:0,
    },
  });

  async function Share() {

    const web3driveAddress = contractAddresses['80001'][0]
    async function RunContractFunction() {
      const txResponse = await changeAccessLevel();
      console.log()
    }

    const a = await RunContractFunction()
  }

  async function Delete (){
    async function RunDeleteFunction(){
      const txResponse = await deleteFile();
    }
    await RunDeleteFunction()
  }

  function Open() {
    const index = localStorage.getItem("Index Clicked");
    let url = "https://ipfs.io/ipfs/" + dataRecieved.activeFiles[index].ipfsHash
    window.open(url);
  }

  return (
    <>

      <Head>
        <title>Web3 Drive</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar />
      <AddFile web3driveAddress={web3driveAddress} abi={abi} />
      {console.log("SS")}
      <div id='hideNavbar'><button id='internal' onClick={Open}>Open</button><button id='internal'>Comment</button><button id='internal' onClick={Share}>Share</button><button id='internal' onClick={Delete}>Delete</button></div>
      <div className='wrapper'>
        {dataRecieved ? dataRecieved.activeFiles.map((a, index) => {
          return (
            
            <Cards ipfs={a.ipfsHash} index={index} />
          )
        }) : <div className='loading'>Loading...</div>}

      </div>
      <Footer web3driveAddress={web3driveAddress} abi={abi} />
    </>
  )
}
